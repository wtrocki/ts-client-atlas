/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiLineItemView } from '../models/ApiLineItemView';
import { ApiPaymentView } from '../models/ApiPaymentView';
import { ApiRefundView } from '../models/ApiRefundView';
import { Link } from '../models/Link';
import { HttpFile } from '../http/http';

export class ApiInvoiceView {
    /**
    * Sum of services that the specified organization consumed in the period covered in this invoice. This parameter expresses its value in cents (100ths of one US Dollar) and calculates its value as **subtotalCents** + **salesTaxCents** - **startingBalanceCents**.
    */
    'amountBilledCents'?: number;
    /**
    * Sum that the specified organization paid toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).
    */
    'amountPaidCents'?: number;
    /**
    * Date and time when MongoDB Cloud created this invoice. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */
    'created'?: Date;
    /**
    * Sum that MongoDB credited the specified organization toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).
    */
    'creditsCents'?: number;
    /**
    * Date and time when MongoDB Cloud finished the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */
    'endDate'?: Date;
    /**
    * Unique 24-hexadecimal digit string that identifies the project associated to this invoice. This identifying string doesn't appear on all invoices.
    */
    'groupId'?: string;
    /**
    * Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.
    */
    'id'?: string;
    /**
    * List that contains individual services included in this invoice.
    */
    'lineItems'?: Array<ApiLineItemView>;
    /**
    * List that contains the invoices for organizations linked to the paying organization.
    */
    'linkedInvoices'?: Array<ApiInvoiceView>;
    /**
    * List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.
    */
    'links'?: Array<Link>;
    /**
    * Unique 24-hexadecimal digit string that identifies the organization charged for services consumed from MongoDB Cloud.
    */
    'orgId'?: string;
    /**
    * List that contains funds transferred to MongoDB to cover the specified service noted in this invoice.
    */
    'payments'?: Array<ApiPaymentView>;
    /**
    * List that contains payments that MongoDB returned to the organization for this invoice.
    */
    'refunds'?: Array<ApiRefundView>;
    /**
    * Sum of sales tax applied to this invoice. This parameter expresses its value in cents (100ths of one US Dollar).
    */
    'salesTaxCents'?: number;
    /**
    * Date and time when MongoDB Cloud began the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */
    'startDate'?: Date;
    /**
    * Sum that the specified organization owed to MongoDB when MongoDB issued this invoice. This parameter expresses its value in US Dollars.
    */
    'startingBalanceCents'?: number;
    /**
    * Phase of payment processing in which this invoice exists when you made this request. Accepted phases include:  | Phase Value | Reason | |---|---| | CLOSED | MongoDB finalized all charges in the billing cycle but has yet to charge the customer. | | FAILED | MongoDB attempted to charge the provided credit card but charge for that amount failed. | | FORGIVEN | Customer initiated payment which MongoDB later forgave. | | FREE | All charges totalled zero so the customer won't be charged. | | INVOICED | MongoDB handled these charges using elastic invoicing. | | PAID | MongoDB succeeded in charging the provided credit card. | | PENDING | Invoice includes charges for the current billing cycle. | | PREPAID | Customer has a pre-paid plan so they won't be charged. | 
    */
    'statusName'?: ApiInvoiceViewStatusNameEnum;
    /**
    * Sum of all positive invoice line items contained in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).
    */
    'subtotalCents'?: number;
    /**
    * Date and time when MongoDB Cloud last updated the value of this payment. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */
    'updated'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "amountBilledCents",
            "baseName": "amountBilledCents",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "amountPaidCents",
            "baseName": "amountPaidCents",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "creditsCents",
            "baseName": "creditsCents",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "endDate",
            "baseName": "endDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "lineItems",
            "baseName": "lineItems",
            "type": "Array<ApiLineItemView>",
            "format": ""
        },
        {
            "name": "linkedInvoices",
            "baseName": "linkedInvoices",
            "type": "Array<ApiInvoiceView>",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<Link>",
            "format": ""
        },
        {
            "name": "orgId",
            "baseName": "orgId",
            "type": "string",
            "format": ""
        },
        {
            "name": "payments",
            "baseName": "payments",
            "type": "Array<ApiPaymentView>",
            "format": ""
        },
        {
            "name": "refunds",
            "baseName": "refunds",
            "type": "Array<ApiRefundView>",
            "format": ""
        },
        {
            "name": "salesTaxCents",
            "baseName": "salesTaxCents",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "startDate",
            "baseName": "startDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "startingBalanceCents",
            "baseName": "startingBalanceCents",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "statusName",
            "baseName": "statusName",
            "type": "ApiInvoiceViewStatusNameEnum",
            "format": ""
        },
        {
            "name": "subtotalCents",
            "baseName": "subtotalCents",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return ApiInvoiceView.attributeTypeMap;
    }

    public constructor() {
    }
}


export type ApiInvoiceViewStatusNameEnum = "PENDING" | "CLOSED" | "FORGIVEN" | "FAILED" | "PAID" | "FREE" | "PREPAID" | "INVOICED" ;

