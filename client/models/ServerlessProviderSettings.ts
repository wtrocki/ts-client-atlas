/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Group of cloud provider settings that configure the provisioned MongoDB serverless instance.
*/
export class ServerlessProviderSettings {
    /**
    * Cloud service provider on which MongoDB Cloud provisioned the serverless instance.
    */
    'backingProviderName': ServerlessProviderSettingsBackingProviderNameEnum;
    /**
    * Human-readable label that identifies the cloud service provider.
    */
    'providerName'?: ServerlessProviderSettingsProviderNameEnum;
    /**
    * Human-readable label that identifies the geographic location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
    */
    'regionName': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "backingProviderName",
            "baseName": "backingProviderName",
            "type": "ServerlessProviderSettingsBackingProviderNameEnum",
            "format": ""
        },
        {
            "name": "providerName",
            "baseName": "providerName",
            "type": "ServerlessProviderSettingsProviderNameEnum",
            "format": ""
        },
        {
            "name": "regionName",
            "baseName": "regionName",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ServerlessProviderSettings.attributeTypeMap;
    }

    public constructor() {
    }
}


export type ServerlessProviderSettingsBackingProviderNameEnum = "AWS" | "AZURE" | "GCP" ;
export type ServerlessProviderSettingsProviderNameEnum = "SERVERLESS" ;

