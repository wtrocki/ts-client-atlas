/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Tokenizer that you want to use to create tokens. Tokens determine how Atlas Search splits up text into discrete chunks for indexing.
*/
export class ApiAtlasFTSAnalyzersTokenizer {
    /**
    * Characters to include in the longest token that Atlas Search creates.
    */

    'maxGram'?: number;
    /**
    * Characters to include in the shortest token that Atlas Search creates.
    */

    'minGram'?: number;
    /**
    * Human-readable label that identifies this tokenizer type.
    */

    'type'?: string;
    /**
    * Index of the character group within the matching expression to extract into tokens. Use `0` to extract all character groups.
    */

    'group'?: number;
    /**
    * Regular expression to match against.
    */

    'pattern'?: string;
    /**
    * Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens.
    */

    'maxTokenLength'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "maxGram",
            "baseName": "maxGram",
            "type": "number",
            "format": ""
        },
        {
            "name": "minGram",
            "baseName": "minGram",
            "type": "number",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "group",
            "baseName": "group",
            "type": "number",
            "format": ""
        },
        {
            "name": "pattern",
            "baseName": "pattern",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxTokenLength",
            "baseName": "maxTokenLength",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ApiAtlasFTSAnalyzersTokenizer.attributeTypeMap;
    }

    public constructor() {
    }
}

