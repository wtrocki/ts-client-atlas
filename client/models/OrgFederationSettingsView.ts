/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Details that define how to connect one MongoDB Cloud organization to one federated authentication service.
*/
export class OrgFederationSettingsView {
    /**
    * List of domains associated with the organization's identity provider.
    */
    'federatedDomains'?: Set<string>;
    /**
    * Flag that indicates whether this organization has role mappings configured.
    */
    'hasRoleMappings'?: boolean;
    /**
    * Unique 24-hexadecimal digit string that identifies this federation.
    */
    'id'?: string;
    /**
    * Unique 20-hexadecimal digit string that identifies the identity provider connected to this organization.
    */
    'identityProviderId'?: string;
    /**
    * String enum that indicates whether the identity provider is active.
    */
    'identityProviderStatus'?: OrgFederationSettingsViewIdentityProviderStatusEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "federatedDomains",
            "baseName": "federatedDomains",
            "type": "Set<string>",
            "format": ""
        },
        {
            "name": "hasRoleMappings",
            "baseName": "hasRoleMappings",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "identityProviderId",
            "baseName": "identityProviderId",
            "type": "string",
            "format": ""
        },
        {
            "name": "identityProviderStatus",
            "baseName": "identityProviderStatus",
            "type": "OrgFederationSettingsViewIdentityProviderStatusEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return OrgFederationSettingsView.attributeTypeMap;
    }

    public constructor() {
    }
}


export type OrgFederationSettingsViewIdentityProviderStatusEnum = "ACTIVE" | "INACTIVE" ;

