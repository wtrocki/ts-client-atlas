/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class ClusterDescriptionProcessArgs {
    /**
    * Number of threads on the source shard and the receiving shard for chunk migration. The number of threads should not exceed the half the total number of CPU cores in the sharded cluster.
    */

    'chunkMigrationConcurrency'?: number;
    /**
    * Default level of acknowledgment requested from MongoDB for read operations set for this cluster.  MongoDB 4.4 clusters default to `available`. MongoDB 5.0 and later clusters default to `local`.
    */

    'defaultReadConcern'?: string;
    /**
    * Default level of acknowledgment requested from MongoDB for write operations set for this cluster.  MongoDB 4.4 clusters default to `1`. MongoDB 5.0 and later clusters default to `majority`.
    */

    'defaultWriteConcern'?: string;
    /**
    * Flag that indicates whether you can insert or update documents where all indexed entries don't exceed 1024 bytes. If you set this to false, [mongod](https://docs.mongodb.com/upcoming/reference/program/mongod/#mongodb-binary-bin.mongod) writes documents that exceed this limit but doesn't index them. This parameter has been removed as of [MongoDB 4.4](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.failIndexKeyTooLong).
    */

    'failIndexKeyTooLong'?: boolean;
    /**
    * Flag that indicates whether the cluster allows execution of operations that perform server-side executions of JavaScript.
    */

    'javascriptEnabled'?: boolean;
    /**
    * Minimum Transport Layer Security (TLS) version that the cluster accepts for incoming connections. Clusters using TLS 1.0 or 1.1 should consider setting TLS 1.2 as the minimum TLS protocol version.
    */

    'minimumEnabledTlsProtocol'?: string;
    /**
    * Flag that indicates whether the cluster disables executing any query that requires a collection scan to return results.
    */

    'noTableScan'?: boolean;
    /**
    * Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
    */

    'oplogMinRetentionHours'?: number;
    /**
    * Storage limit of cluster's oplog expressed in megabytes. A value of null indicates that the cluster uses the default oplog size that MongoDB Cloud calculates.
    */

    'oplogSizeMB'?: number;
    /**
    * May be set to 1 (disabled) or 3 (enabled). When set to 3, Atlas will include redacted and anonymized $queryStats output in MongoDB logs. $queryStats output does not contain literals or field values. Enabling this setting might impact the performance of your cluster.
    */

    'queryStatsLogVerbosity'?: number;
    /**
    * Interval in seconds at which the mongosqld process re-samples data to create its relational schema.
    */

    'sampleRefreshIntervalBIConnector'?: number;
    /**
    * Number of documents per database to sample when gathering schema information.
    */

    'sampleSizeBIConnector'?: number;
    /**
    * Lifetime, in seconds, of multi-document transactions. Atlas considers the transactions that exceed this limit as expired and so aborts them through a periodic cleanup process.
    */

    'transactionLifetimeLimitSeconds'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "chunkMigrationConcurrency",
            "baseName": "chunkMigrationConcurrency",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "defaultReadConcern",
            "baseName": "defaultReadConcern",
            "type": "string",
            "format": ""
        },
        {
            "name": "defaultWriteConcern",
            "baseName": "defaultWriteConcern",
            "type": "string",
            "format": ""
        },
        {
            "name": "failIndexKeyTooLong",
            "baseName": "failIndexKeyTooLong",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "javascriptEnabled",
            "baseName": "javascriptEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "minimumEnabledTlsProtocol",
            "baseName": "minimumEnabledTlsProtocol",
            "type": "string",
            "format": ""
        },
        {
            "name": "noTableScan",
            "baseName": "noTableScan",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "oplogMinRetentionHours",
            "baseName": "oplogMinRetentionHours",
            "type": "number",
            "format": "double"
        },
        {
            "name": "oplogSizeMB",
            "baseName": "oplogSizeMB",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "queryStatsLogVerbosity",
            "baseName": "queryStatsLogVerbosity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "sampleRefreshIntervalBIConnector",
            "baseName": "sampleRefreshIntervalBIConnector",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "sampleSizeBIConnector",
            "baseName": "sampleSizeBIConnector",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "transactionLifetimeLimitSeconds",
            "baseName": "transactionLifetimeLimitSeconds",
            "type": "number",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return ClusterDescriptionProcessArgs.attributeTypeMap;
    }

    public constructor() {
    }
}

