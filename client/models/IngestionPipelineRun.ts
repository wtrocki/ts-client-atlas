/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PipelineRunStats } from '../models/PipelineRunStats';
import { HttpFile } from '../http/http';

/**
* Run details of a Data Lake Pipeline.
*/
export class IngestionPipelineRun {
    /**
    * Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
    */
    'id'?: string;
    /**
    * Backup schedule interval of the Data Lake Pipeline.
    */
    'backupFrequencyType'?: IngestionPipelineRunBackupFrequencyTypeEnum;
    /**
    * Timestamp that indicates when the pipeline run was created.
    */
    'createdDate'?: Date;
    /**
    * Human-readable label that identifies the dataset that Atlas generates during this pipeline run. You can use this dataset as a `dataSource` in a Federated Database collection.
    */
    'datasetName'?: string;
    /**
    * Unique 24-hexadecimal character string that identifies the project.
    */
    'groupId'?: string;
    /**
    * Timestamp that indicates the last time that the pipeline run was updated.
    */
    'lastUpdatedDate'?: Date;
    /**
    * Processing phase of the Data Lake Pipeline.
    */
    'phase'?: IngestionPipelineRunPhaseEnum;
    /**
    * Unique 24-hexadecimal character string that identifies a Data Lake Pipeline.
    */
    'pipelineId'?: string;
    /**
    * Unique 24-hexadecimal character string that identifies the snapshot of a cluster.
    */
    'snapshotId'?: string;
    /**
    * State of the pipeline run.
    */
    'state'?: IngestionPipelineRunStateEnum;
    'stats'?: PipelineRunStats;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "backupFrequencyType",
            "baseName": "backupFrequencyType",
            "type": "IngestionPipelineRunBackupFrequencyTypeEnum",
            "format": ""
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "datasetName",
            "baseName": "datasetName",
            "type": "string",
            "format": ""
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastUpdatedDate",
            "baseName": "lastUpdatedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "phase",
            "baseName": "phase",
            "type": "IngestionPipelineRunPhaseEnum",
            "format": ""
        },
        {
            "name": "pipelineId",
            "baseName": "pipelineId",
            "type": "string",
            "format": ""
        },
        {
            "name": "snapshotId",
            "baseName": "snapshotId",
            "type": "string",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "IngestionPipelineRunStateEnum",
            "format": ""
        },
        {
            "name": "stats",
            "baseName": "stats",
            "type": "PipelineRunStats",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return IngestionPipelineRun.attributeTypeMap;
    }

    public constructor() {
    }
}


export type IngestionPipelineRunBackupFrequencyTypeEnum = "HOURLY" | "DAILY" | "WEEKLY" | "MONTHLY" | "ON_DEMAND" ;
export type IngestionPipelineRunPhaseEnum = "SNAPSHOT" | "EXPORT" | "INGESTION" ;
export type IngestionPipelineRunStateEnum = "PENDING" | "IN_PROGRESS" | "DONE" | "FAILED" | "DATASET_DELETED" ;

