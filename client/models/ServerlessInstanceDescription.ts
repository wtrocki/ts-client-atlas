/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ClusterServerlessBackupOptions } from '../models/ClusterServerlessBackupOptions';
import { Link } from '../models/Link';
import { ResourceTag } from '../models/ResourceTag';
import { ServerlessInstanceDescriptionConnectionStrings } from '../models/ServerlessInstanceDescriptionConnectionStrings';
import { ServerlessProviderSettings } from '../models/ServerlessProviderSettings';
import { HttpFile } from '../http/http';

/**
* Group of settings that configure a MongoDB serverless instance.
*/
export class ServerlessInstanceDescription {

    'connectionStrings'?: ServerlessInstanceDescriptionConnectionStrings;
    /**
    * Date and time when MongoDB Cloud created this serverless instance. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.
    */

    'createDate'?: Date;
    /**
    * Unique 24-hexadecimal character string that identifies the project.
    */

    'groupId'?: string;
    /**
    * Unique 24-hexadecimal digit string that identifies the serverless instance.
    */

    'id'?: string;
    /**
    * List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.
    */

    'links'?: Array<Link>;
    /**
    * Version of MongoDB that the serverless instance runs.
    */

    'mongoDBVersion'?: string;
    /**
    * Human-readable label that identifies the serverless instance.
    */

    'name'?: string;

    'providerSettings': ServerlessProviderSettings;

    'serverlessBackupOptions'?: ClusterServerlessBackupOptions;
    /**
    * Human-readable label that indicates the current operating condition of the serverless instance.
    */

    'stateName'?: string;
    /**
    * List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the serverless instance.
    */

    'tags'?: Array<ResourceTag>;
    /**
    * Flag that indicates whether termination protection is enabled on the serverless instance. If set to `true`, MongoDB Cloud won't delete the serverless instance. If set to `false`, MongoDB Cloud will delete the serverless instance.
    */

    'terminationProtectionEnabled'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "connectionStrings",
            "baseName": "connectionStrings",
            "type": "ServerlessInstanceDescriptionConnectionStrings",
            "format": ""
        },
        {
            "name": "createDate",
            "baseName": "createDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<Link>",
            "format": ""
        },
        {
            "name": "mongoDBVersion",
            "baseName": "mongoDBVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "providerSettings",
            "baseName": "providerSettings",
            "type": "ServerlessProviderSettings",
            "format": ""
        },
        {
            "name": "serverlessBackupOptions",
            "baseName": "serverlessBackupOptions",
            "type": "ClusterServerlessBackupOptions",
            "format": ""
        },
        {
            "name": "stateName",
            "baseName": "stateName",
            "type": "string",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<ResourceTag>",
            "format": ""
        },
        {
            "name": "terminationProtectionEnabled",
            "baseName": "terminationProtectionEnabled",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ServerlessInstanceDescription.attributeTypeMap;
    }

    public constructor() {
    }
}

