/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Range of resources available to this database user.
*/
export class Role {
    /**
    * Collection on which this role applies.
    */

    'collectionName': string;
    /**
    * Database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB.
    */

    'databaseName': string;
    /**
    * Human-readable label that identifies a group of privileges assigned to a database user. This value can either be a built-in role or a custom role.
    */

    'roleName': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "collectionName",
            "baseName": "collectionName",
            "type": "string",
            "format": ""
        },
        {
            "name": "databaseName",
            "baseName": "databaseName",
            "type": "string",
            "format": ""
        },
        {
            "name": "roleName",
            "baseName": "roleName",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Role.attributeTypeMap;
    }

    public constructor() {
    }
}


export type RoleRoleNameEnum = "atlasAdmin" | "backup" | "clusterMonitor" | "dbAdmin" | "dbAdminAnyDatabase" | "enableSharding" | "read" | "readAnyDatabase" | "readWrite" | "readWriteAnyDatabase" | "&lt;a custom role name&gt;" ;

