/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Filter that tokenizes input from the left side, or \"edge\", of a text input into n-grams of configured sizes. You can't use this token filter in synonym or autocomplete mapping definitions.
*/
export class TokenFilteredgeGram {
    /**
    * Value that specifies the maximum length of generated n-grams. This value must be greater than or equal to **minGram**.
    */

    'maxGram': number;
    /**
    * Value that specifies the minimum length of generated n-grams. This value must be less than or equal to **maxGram**.
    */

    'minGram': number;
    /**
    * Value that indicates whether to index tokens shorter than **minGram** or longer than **maxGram**.
    */

    'termNotInBounds'?: string;
    /**
    * Human-readable label that identifies this token filter type.
    */

    'type': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "maxGram",
            "baseName": "maxGram",
            "type": "number",
            "format": ""
        },
        {
            "name": "minGram",
            "baseName": "minGram",
            "type": "number",
            "format": ""
        },
        {
            "name": "termNotInBounds",
            "baseName": "termNotInBounds",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TokenFilteredgeGram.attributeTypeMap;
    }

    public constructor() {
    }
}


export type TokenFilteredgeGramTermNotInBoundsEnum = "omit" | "include" ;
export type TokenFilteredgeGramTypeEnum = "edgeGram" ;

