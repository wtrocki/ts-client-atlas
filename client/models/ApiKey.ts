/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AccessListItem } from '../models/AccessListItem';
import { CloudAccessRoleAssignment } from '../models/CloudAccessRoleAssignment';
import { HttpFile } from '../http/http';

/**
* Details contained in one API key.
*/
export class ApiKey {
    /**
    * List of network addresses granted access to this API using this API key.
    */

    'accessList'?: Array<AccessListItem>;
    /**
    * Unique 24-hexadecimal digit string that identifies this organization API key.
    */

    'id': string;
    /**
    * Public API key value set for the specified organization API key.
    */

    'publicKey': string;
    /**
    * List that contains roles that the API key needs to have. All roles you provide must be valid for the specified project or organization. Each request must include a minimum of one valid role. The resource returns all project and organization roles assigned to the Cloud user.
    */

    'roles'?: Array<CloudAccessRoleAssignment>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accessList",
            "baseName": "accessList",
            "type": "Array<AccessListItem>",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "publicKey",
            "baseName": "publicKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "roles",
            "baseName": "roles",
            "type": "Array<CloudAccessRoleAssignment>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ApiKey.attributeTypeMap;
    }

    public constructor() {
    }
}

