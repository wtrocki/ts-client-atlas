/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Link } from '../models/Link';
import { HttpFile } from '../http/http';

export class TenantRestore {
    /**
    * Human-readable label that identifies the source cluster.
    */

    'clusterName'?: string;
    /**
    * Means by which this resource returns the snapshot to the requesting MongoDB Cloud user.
    */

    'deliveryType'?: string;
    /**
    * Date and time when the download link no longer works. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'expirationDate'?: Date;
    /**
    * Unique 24-hexadecimal digit string that identifies the restore job.
    */

    'id'?: string;
    /**
    * List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.
    */

    'links'?: Array<Link>;
    /**
    * Unique 24-hexadecimal digit string that identifies the project from which the restore job originated.
    */

    'projectId'?: string;
    /**
    * Date and time when MongoDB Cloud completed writing this snapshot. MongoDB Cloud changes the status of the restore job to `CLOSED`. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'restoreFinishedDate'?: Date;
    /**
    * Date and time when MongoDB Cloud will restore this snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'restoreScheduledDate'?: Date;
    /**
    * Date and time when MongoDB Cloud completed writing this snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'snapshotFinishedDate'?: Date;
    /**
    * Unique 24-hexadecimal digit string that identifies the snapshot to restore.
    */

    'snapshotId': string;
    /**
    * Internet address from which you can download the compressed snapshot files. The resource returns this parameter when  `\"deliveryType\" : \"DOWNLOAD\"`.
    */

    'snapshotUrl'?: string;
    /**
    * Phase of the restore workflow for this job at the time this resource made this request.
    */

    'status'?: string;
    /**
    * Human-readable label that identifies the cluster on the target project to which you want to restore the snapshot. You can restore the snapshot to a cluster tier *M2* or greater.
    */

    'targetDeploymentItemName': string;
    /**
    * Unique 24-hexadecimal digit string that identifies the project that contains the cluster to which you want to restore the snapshot.
    */

    'targetProjectId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "clusterName",
            "baseName": "clusterName",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryType",
            "baseName": "deliveryType",
            "type": "string",
            "format": ""
        },
        {
            "name": "expirationDate",
            "baseName": "expirationDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<Link>",
            "format": ""
        },
        {
            "name": "projectId",
            "baseName": "projectId",
            "type": "string",
            "format": ""
        },
        {
            "name": "restoreFinishedDate",
            "baseName": "restoreFinishedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "restoreScheduledDate",
            "baseName": "restoreScheduledDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "snapshotFinishedDate",
            "baseName": "snapshotFinishedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "snapshotId",
            "baseName": "snapshotId",
            "type": "string",
            "format": ""
        },
        {
            "name": "snapshotUrl",
            "baseName": "snapshotUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "targetDeploymentItemName",
            "baseName": "targetDeploymentItemName",
            "type": "string",
            "format": ""
        },
        {
            "name": "targetProjectId",
            "baseName": "targetProjectId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TenantRestore.attributeTypeMap;
    }

    public constructor() {
    }
}

