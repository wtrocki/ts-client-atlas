/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CloudProviderAccessFeatureUsage } from '../models/CloudProviderAccessFeatureUsage';
import { HttpFile } from '../http/http';

/**
* Details that describe the features linked to the Amazon Web Services (AWS) Identity and Access Management (IAM) role.
*/
export class CloudProviderAccessAWSIAMRole {
    /**
    * Amazon Resource Name that identifies the Amazon Web Services (AWS) user account that MongoDB Cloud uses when it assumes the Identity and Access Management (IAM) role.
    */

    'atlasAWSAccountArn'?: string;
    /**
    * Unique external ID that MongoDB Cloud uses when it assumes the IAM role in your Amazon Web Services (AWS) account.
    */

    'atlasAssumedRoleExternalId'?: string;
    /**
    * Date and time when someone authorized this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'authorizedDate'?: Date;
    /**
    * Date and time when someone created this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'createdDate'?: Date;
    /**
    * List that contains application features associated with this Amazon Web Services (AWS) Identity and Access Management (IAM) role.
    */

    'featureUsages'?: Array<CloudProviderAccessFeatureUsage>;
    /**
    * Amazon Resource Name (ARN) that identifies the Amazon Web Services (AWS) Identity and Access Management (IAM) role that MongoDB Cloud assumes when it accesses resources in your AWS account.
    */

    'iamAssumedRoleArn'?: string;
    /**
    * Unique 24-hexadecimal digit string that identifies the role.
    */

    'roleId'?: string;
    /**
    * Human-readable label that identifies the cloud provider of the role.
    */

    'providerName': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "atlasAWSAccountArn",
            "baseName": "atlasAWSAccountArn",
            "type": "string",
            "format": ""
        },
        {
            "name": "atlasAssumedRoleExternalId",
            "baseName": "atlasAssumedRoleExternalId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "authorizedDate",
            "baseName": "authorizedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "featureUsages",
            "baseName": "featureUsages",
            "type": "Array<CloudProviderAccessFeatureUsage>",
            "format": ""
        },
        {
            "name": "iamAssumedRoleArn",
            "baseName": "iamAssumedRoleArn",
            "type": "string",
            "format": ""
        },
        {
            "name": "roleId",
            "baseName": "roleId",
            "type": "string",
            "format": ""
        },
        {
            "name": "providerName",
            "baseName": "providerName",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CloudProviderAccessAWSIAMRole.attributeTypeMap;
    }

    public constructor() {
    }
}


export type CloudProviderAccessAWSIAMRoleProviderNameEnum = "AWS" ;

