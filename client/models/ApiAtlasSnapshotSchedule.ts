/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Link } from '../models/Link';
import { HttpFile } from '../http/http';

export class ApiAtlasSnapshotSchedule {
    /**
    * Quantity of time expressed in minutes between successive cluster checkpoints. This parameter applies only to sharded clusters. This number determines the granularity of continuous cloud backups for sharded clusters.
    */

    'clusterCheckpointIntervalMin': number;
    /**
    * Unique 24-hexadecimal digit string that identifies the cluster with the snapshot you want to return.
    */

    'clusterId': string;
    /**
    * Quantity of time to keep daily snapshots. MongoDB Cloud expresses this value in days. Set this value to `0` to disable daily snapshot retention.
    */

    'dailySnapshotRetentionDays': number;
    /**
    * Unique 24-hexadecimal digit string that identifies the project that contains the cluster.
    */

    'groupId': string;
    /**
    * List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.
    */

    'links'?: Array<Link>;
    /**
    * Number of months that MongoDB Cloud must keep monthly snapshots. Set this value to `0` to disable monthly snapshot retention.
    */

    'monthlySnapshotRetentionMonths': number;
    /**
    * Number of hours before the current time from which MongoDB Cloud can create a Continuous Cloud Backup snapshot.
    */

    'pointInTimeWindowHours': number;
    /**
    * Number of hours that must elapse before taking another snapshot.
    */

    'snapshotIntervalHours': number;
    /**
    * Number of days that MongoDB Cloud must keep recent snapshots.
    */

    'snapshotRetentionDays': number;
    /**
    * Number of weeks that MongoDB Cloud must keep weekly snapshots. Set this value to `0` to disable weekly snapshot retention.
    */

    'weeklySnapshotRetentionWeeks': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "clusterCheckpointIntervalMin",
            "baseName": "clusterCheckpointIntervalMin",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "clusterId",
            "baseName": "clusterId",
            "type": "string",
            "format": ""
        },
        {
            "name": "dailySnapshotRetentionDays",
            "baseName": "dailySnapshotRetentionDays",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<Link>",
            "format": ""
        },
        {
            "name": "monthlySnapshotRetentionMonths",
            "baseName": "monthlySnapshotRetentionMonths",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "pointInTimeWindowHours",
            "baseName": "pointInTimeWindowHours",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "snapshotIntervalHours",
            "baseName": "snapshotIntervalHours",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "snapshotRetentionDays",
            "baseName": "snapshotRetentionDays",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "weeklySnapshotRetentionWeeks",
            "baseName": "weeklySnapshotRetentionWeeks",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return ApiAtlasSnapshotSchedule.attributeTypeMap;
    }

    public constructor() {
    }
}

