/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DataLakeCloudProviderConfig } from '../models/DataLakeCloudProviderConfig';
import { DataLakeDataProcessRegion } from '../models/DataLakeDataProcessRegion';
import { DataLakeStorage } from '../models/DataLakeStorage';
import { PrivateEndpointHostname } from '../models/PrivateEndpointHostname';
import { HttpFile } from '../http/http';

export class DataLakeTenant {

    'cloudProviderConfig'?: DataLakeCloudProviderConfig;

    'dataProcessRegion'?: DataLakeDataProcessRegion;
    /**
    * Unique 24-hexadecimal character string that identifies the project.
    */

    'groupId'?: string;
    /**
    * List that contains the hostnames assigned to the Data Lake instance.
    */

    'hostnames'?: Array<string>;
    /**
    * Human-readable label that identifies the data lake.
    */

    'name'?: string;
    /**
    * List that contains the sets of private endpoints and hostnames.
    */

    'privateEndpointHostnames'?: Array<PrivateEndpointHostname>;
    /**
    * Label that indicates the status of the Data Lake instance.
    */

    'state'?: string;

    'storage'?: DataLakeStorage;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "cloudProviderConfig",
            "baseName": "cloudProviderConfig",
            "type": "DataLakeCloudProviderConfig",
            "format": ""
        },
        {
            "name": "dataProcessRegion",
            "baseName": "dataProcessRegion",
            "type": "DataLakeDataProcessRegion",
            "format": ""
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "hostnames",
            "baseName": "hostnames",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "privateEndpointHostnames",
            "baseName": "privateEndpointHostnames",
            "type": "Array<PrivateEndpointHostname>",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string",
            "format": ""
        },
        {
            "name": "storage",
            "baseName": "storage",
            "type": "DataLakeStorage",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DataLakeTenant.attributeTypeMap;
    }

    public constructor() {
    }
}

