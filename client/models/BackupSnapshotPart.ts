/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Characteristics that identify this snapshot.
*/
export class BackupSnapshotPart {
    /**
    * Unique 24-hexadecimal digit string that identifies the cluster with the snapshots you want to return.
    */

    'clusterId'?: string;
    /**
    * Human-readable label that identifies the method of compression for the snapshot.
    */

    'compressionSetting'?: string;
    /**
    * Total size of the data stored on each node in the cluster. This parameter expresses its value in bytes.
    */

    'dataSizeBytes'?: number;
    /**
    * Flag that indicates whether someone encrypted this snapshot.
    */

    'encryptionEnabled'?: boolean;
    /**
    * Number that indicates the total size of the data files in bytes.
    */

    'fileSizeBytes'?: number;
    /**
    * Unique string that identifies the Key Management Interoperability (KMIP) master key used to encrypt the snapshot data. The resource returns this parameter when `\"parts.encryptionEnabled\" : true`.
    */

    'masterKeyUUID'?: string;
    /**
    * Number that indicates the version of MongoDB that the replica set primary ran when MongoDB Cloud created the snapshot.
    */

    'mongodVersion'?: string;
    /**
    * Human-readable label that identifies the replica set.
    */

    'replicaSetName'?: string;
    /**
    * Number that indicates the total size of space allocated for document storage.
    */

    'storageSizeBytes'?: number;
    /**
    * Human-readable label that identifies the type of server from which MongoDB Cloud took this snapshot.
    */

    'typeName'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "clusterId",
            "baseName": "clusterId",
            "type": "string",
            "format": ""
        },
        {
            "name": "compressionSetting",
            "baseName": "compressionSetting",
            "type": "string",
            "format": ""
        },
        {
            "name": "dataSizeBytes",
            "baseName": "dataSizeBytes",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "encryptionEnabled",
            "baseName": "encryptionEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "fileSizeBytes",
            "baseName": "fileSizeBytes",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "masterKeyUUID",
            "baseName": "masterKeyUUID",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "mongodVersion",
            "baseName": "mongodVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "replicaSetName",
            "baseName": "replicaSetName",
            "type": "string",
            "format": ""
        },
        {
            "name": "storageSizeBytes",
            "baseName": "storageSizeBytes",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "typeName",
            "baseName": "typeName",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return BackupSnapshotPart.attributeTypeMap;
    }

    public constructor() {
    }
}

