/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DataLakeDatabase } from '../models/DataLakeDatabase';
import { DataLakeStore } from '../models/DataLakeStore';
import { HttpFile } from '../http/http';

/**
* Configuration information for each data store and its mapping to MongoDB Cloud databases.
*/
export class DataLakeStorage {
    /**
    * Array that contains the queryable databases and collections for this data lake.
    */
    'databases'?: Array<DataLakeDatabase>;
    /**
    * Array that contains the data stores for the data lake.
    */
    'stores'?: Array<DataLakeStore>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "databases",
            "baseName": "databases",
            "type": "Array<DataLakeDatabase>",
            "format": ""
        },
        {
            "name": "stores",
            "baseName": "stores",
            "type": "Array<DataLakeStore>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DataLakeStorage.attributeTypeMap;
    }

    public constructor() {
    }
}

