/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ClusterView } from '../models/ClusterView';
import { HttpFile } from '../http/http';

export class OrgGroupView {
    /**
    * Settings that describe the clusters in each project that the API key is authorized to view.
    */

    'clusters'?: Array<ClusterView>;
    /**
    * Unique 24-hexadecimal character string that identifies the project.
    */

    'groupId'?: string;
    /**
    * Human-readable label that identifies the project.
    */

    'groupName'?: string;
    /**
    * Unique 24-hexadecimal character string that identifies the organization that contains the project.
    */

    'orgId'?: string;
    /**
    * Human-readable label that identifies the organization that contains the project.
    */

    'orgName'?: string;
    /**
    * Human-readable label that indicates the plan type.
    */

    'planType'?: string;
    /**
    * List of human-readable labels that categorize the specified project. MongoDB Cloud returns an empty array.
    */

    'tags'?: Array<string>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "clusters",
            "baseName": "clusters",
            "type": "Array<ClusterView>",
            "format": ""
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "groupName",
            "baseName": "groupName",
            "type": "string",
            "format": ""
        },
        {
            "name": "orgId",
            "baseName": "orgId",
            "type": "string",
            "format": ""
        },
        {
            "name": "orgName",
            "baseName": "orgName",
            "type": "string",
            "format": ""
        },
        {
            "name": "planType",
            "baseName": "planType",
            "type": "string",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<string>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return OrgGroupView.attributeTypeMap;
    }

    public constructor() {
    }
}

