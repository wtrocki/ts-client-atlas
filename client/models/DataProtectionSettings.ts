/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiPolicyItemView } from '../models/ApiPolicyItemView';
import { HttpFile } from '../http/http';

export class DataProtectionSettings {
    /**
    * Flag that indicates whether to enable additional backup copies for the cluster.
    */

    'copyProtectionEnabled'?: boolean;
    /**
    * Flag that indicates whether Encryption at Rest using Customer Key  Management is required for all clusters with a Data Protection Policy.
    */

    'encryptionAtRestEnabled'?: boolean;

    'onDemandPolicyItem'?: ApiPolicyItemView;
    /**
    * Flag that indicates whether the cluster uses Continuous Cloud Backups with a Data Protection Policy.
    */

    'pitEnabled'?: boolean;
    /**
    * Unique 24-hexadecimal digit string that identifies the project for the Data Protection Policy.
    */

    'projectId'?: string;
    /**
    * Number of previous days that you can restore back to with Continuous Cloud Backup with a Data Protection Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Data Protection Policy.
    */

    'restoreWindowDays'?: number;
    /**
    * List that contains the specifications for one scheduled policy.
    */

    'scheduledPolicyItems'?: Array<ApiPolicyItemView>;
    /**
    * Label that indicates the state of the Data Protection Policy settings.
    */

    'state'?: string;
    /**
    * ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings.
    */

    'updatedDate'?: Date;
    /**
    * Email address that identifies the user who updated the Data Protection Policy settings.
    */

    'updatedUser'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "copyProtectionEnabled",
            "baseName": "copyProtectionEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "encryptionAtRestEnabled",
            "baseName": "encryptionAtRestEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "onDemandPolicyItem",
            "baseName": "onDemandPolicyItem",
            "type": "ApiPolicyItemView",
            "format": ""
        },
        {
            "name": "pitEnabled",
            "baseName": "pitEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "projectId",
            "baseName": "projectId",
            "type": "string",
            "format": ""
        },
        {
            "name": "restoreWindowDays",
            "baseName": "restoreWindowDays",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "scheduledPolicyItems",
            "baseName": "scheduledPolicyItems",
            "type": "Array<ApiPolicyItemView>",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedDate",
            "baseName": "updatedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updatedUser",
            "baseName": "updatedUser",
            "type": "string",
            "format": "email"
        }    ];

    static getAttributeTypeMap() {
        return DataProtectionSettings.attributeTypeMap;
    }

    public constructor() {
    }
}


export type DataProtectionSettingsStateEnum = "ACTIVE" | "ENABLING" | "UPDATING" | "DISABLING" ;

