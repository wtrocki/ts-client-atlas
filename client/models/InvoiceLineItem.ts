/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* One service included in this invoice.
*/
export class InvoiceLineItem {
    /**
    * Human-readable label that identifies the cluster that incurred the charge.
    */

    'clusterName'?: string;
    /**
    * Date and time when MongoDB Cloud created this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'created'?: Date;
    /**
    * Sum by which MongoDB discounted this line item. MongoDB Cloud expresses this value in cents (100ths of one US Dollar). The resource returns this parameter when a discount applies.
    */

    'discountCents'?: number;
    /**
    * Date and time when when MongoDB Cloud finished charging for this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'endDate'?: Date;
    /**
    * Unique 24-hexadecimal digit string that identifies the project associated to this line item.
    */

    'groupId'?: string;
    /**
    * Human-readable label that identifies the project.
    */

    'groupName'?: string;
    /**
    * Comment that applies to this line item.
    */

    'note'?: string;
    /**
    * Percentage by which MongoDB discounted this line item. The resource returns this parameter when a discount applies.
    */

    'percentDiscount'?: number;
    /**
    * Number of units included for the line item. These can be expressions of storage (GB), time (hours), or other units.
    */

    'quantity'?: number;
    /**
    * Human-readable description of the service that this line item provided. This Stock Keeping Unit (SKU) could be the instance type, a support charge, advanced security, or another service.
    */

    'sku'?: string;
    /**
    * Date and time when MongoDB Cloud began charging for this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'startDate'?: Date;
    /**
    * Human-readable label that identifies the Atlas App Services application associated with this line item.
    */

    'stitchAppName'?: string;
    /**
    * A map of key-value pairs corresponding to the tags associated with the line item resource.
    */

    'tags'?: { [key: string]: Array<string>; };
    /**
    * Lower bound for usage amount range in current SKU tier.   **NOTE**: **lineItems[n].tierLowerBound** appears only if your **lineItems[n].sku** is tiered.
    */

    'tierLowerBound'?: number;
    /**
    * Upper bound for usage amount range in current SKU tier.   **NOTE**: **lineItems[n].tierUpperBound** appears only if your **lineItems[n].sku** is tiered.
    */

    'tierUpperBound'?: number;
    /**
    * Sum of the cost set for this line item. MongoDB Cloud expresses this value in cents (100ths of one US Dollar) and calculates this value as **unitPriceDollars** × **quantity** × 100.
    */

    'totalPriceCents'?: number;
    /**
    * Element used to express what **quantity** this line item measures. This value can be elements of time, storage capacity, and the like.
    */

    'unit'?: string;
    /**
    * Value per **unit** for this line item expressed in US Dollars.
    */

    'unitPriceDollars'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "clusterName",
            "baseName": "clusterName",
            "type": "string",
            "format": ""
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "discountCents",
            "baseName": "discountCents",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "endDate",
            "baseName": "endDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "groupName",
            "baseName": "groupName",
            "type": "string",
            "format": ""
        },
        {
            "name": "note",
            "baseName": "note",
            "type": "string",
            "format": ""
        },
        {
            "name": "percentDiscount",
            "baseName": "percentDiscount",
            "type": "number",
            "format": "float"
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number",
            "format": "double"
        },
        {
            "name": "sku",
            "baseName": "sku",
            "type": "string",
            "format": ""
        },
        {
            "name": "startDate",
            "baseName": "startDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "stitchAppName",
            "baseName": "stitchAppName",
            "type": "string",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "{ [key: string]: Array<string>; }",
            "format": ""
        },
        {
            "name": "tierLowerBound",
            "baseName": "tierLowerBound",
            "type": "number",
            "format": "double"
        },
        {
            "name": "tierUpperBound",
            "baseName": "tierUpperBound",
            "type": "number",
            "format": "double"
        },
        {
            "name": "totalPriceCents",
            "baseName": "totalPriceCents",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "unit",
            "baseName": "unit",
            "type": "string",
            "format": ""
        },
        {
            "name": "unitPriceDollars",
            "baseName": "unitPriceDollars",
            "type": "number",
            "format": "double"
        }    ];

    static getAttributeTypeMap() {
        return InvoiceLineItem.attributeTypeMap;
    }

    public constructor() {
    }
}

