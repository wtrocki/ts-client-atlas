/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class AzurePeerNetworkRequest {
    /**
    * Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.
    */

    'containerId': string;
    /**
    * Cloud service provider that determines the needed settings to configure the network connection for a virtual private connection.
    */

    'providerName': string;
    /**
    * Unique string that identifies the Azure AD directory in which the VNet peered with the MongoDB Cloud VNet resides.
    */

    'azureDirectoryId': string;
    /**
    * Unique string that identifies the Azure subscription in which the VNet you peered with the MongoDB Cloud VNet resides.
    */

    'azureSubscriptionId': string;
    /**
    * Error message returned when a requested Azure network peering resource returns `\"status\" : \"FAILED\"`. The resource returns `null` if the request succeeded.
    */

    'errorState'?: string;
    /**
    * Unique 24-hexadecimal digit string that identifies the network peering connection.
    */

    'id'?: string;
    /**
    * Human-readable label that identifies the resource group in which the VNet to peer with the MongoDB Cloud VNet resides.
    */

    'resourceGroupName': string;
    /**
    * State of the network peering connection at the time you made the request.
    */

    'status'?: string;
    /**
    * Human-readable label that identifies the VNet that you want to peer with the MongoDB Cloud VNet.
    */

    'vnetName': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "containerId",
            "baseName": "containerId",
            "type": "string",
            "format": ""
        },
        {
            "name": "providerName",
            "baseName": "providerName",
            "type": "string",
            "format": ""
        },
        {
            "name": "azureDirectoryId",
            "baseName": "azureDirectoryId",
            "type": "string",
            "format": ""
        },
        {
            "name": "azureSubscriptionId",
            "baseName": "azureSubscriptionId",
            "type": "string",
            "format": ""
        },
        {
            "name": "errorState",
            "baseName": "errorState",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "resourceGroupName",
            "baseName": "resourceGroupName",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "vnetName",
            "baseName": "vnetName",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AzurePeerNetworkRequest.attributeTypeMap;
    }

    public constructor() {
    }
}


export type AzurePeerNetworkRequestProviderNameEnum = "AWS" | "AZURE" | "GCP" ;
export type AzurePeerNetworkRequestStatusEnum = "ADDING_PEER" | "AVAILABLE" | "FAILED" | "DELETION_FAILED" | "DELETING" ;

