/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Name of the cloud service that hosts the data lake's data stores.
*/
export class DataLakeAWSCloudProviderConfig {
    /**
    * Unique identifier associated with the Identity and Access Management (IAM) role that the data lake assumes when accessing the data stores.
    */

    'externalId'?: string;
    /**
    * Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that the data lake assumes when accessing data stores.
    */

    'iamAssumedRoleARN'?: string;
    /**
    * Amazon Resource Name (ARN) of the user that the data lake assumes when accessing data stores.
    */

    'iamUserARN'?: string;
    /**
    * Unique identifier of the role that the data lake can use to access the data stores.Required if specifying cloudProviderConfig.
    */

    'roleId': string;
    /**
    * Name of the S3 data bucket that the provided role ID is authorized to access.Required if specifying cloudProviderConfig.
    */

    'testS3Bucket': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "externalId",
            "baseName": "externalId",
            "type": "string",
            "format": ""
        },
        {
            "name": "iamAssumedRoleARN",
            "baseName": "iamAssumedRoleARN",
            "type": "string",
            "format": ""
        },
        {
            "name": "iamUserARN",
            "baseName": "iamUserARN",
            "type": "string",
            "format": ""
        },
        {
            "name": "roleId",
            "baseName": "roleId",
            "type": "string",
            "format": ""
        },
        {
            "name": "testS3Bucket",
            "baseName": "testS3Bucket",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DataLakeAWSCloudProviderConfig.attributeTypeMap;
    }

    public constructor() {
    }
}

