/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Settings that describe the clusters in each project that the API key is authorized to view.
*/
export class ClusterView {
    /**
    * Whole number that indicates the quantity of alerts open on the cluster.
    */
    'alertCount'?: number;
    /**
    * Flag that indicates whether authentication is required to access the nodes in this cluster.
    */
    'authEnabled'?: boolean;
    /**
    * Term that expresses how many nodes of the cluster can be accessed when MongoDB Cloud receives this request. This parameter returns `available` when all nodes are accessible, `warning` only when some nodes in the cluster can be accessed, `unavailable` when the cluster can't be accessed, or `dead` when the cluster has been deactivated.
    */
    'availability'?: ClusterViewAvailabilityEnum;
    /**
    * Flag that indicates whether the cluster can perform backups. If set to `true`, the cluster can perform backups. You must set this value to `true` for NVMe clusters. Backup uses Cloud Backups for dedicated clusters and Shared Cluster Backups for tenant clusters. If set to `false`, the cluster doesn't use MongoDB Cloud backups.
    */
    'backupEnabled'?: boolean;
    /**
    * Unique 24-hexadecimal character string that identifies the cluster.
    */
    'clusterId'?: string;
    /**
    * Total size of the data stored on each node in the cluster. The resource expresses this value in bytes.
    */
    'dataSizeBytes'?: number;
    /**
    * Human-readable label that identifies the cluster.
    */
    'name'?: string;
    /**
    * Whole number that indicates the quantity of nodes that comprise the cluster.
    */
    'nodeCount'?: number;
    /**
    * Flag that indicates whether TLS authentication is required to access the nodes in this cluster.
    */
    'sslEnabled'?: boolean;
    /**
    * Human-readable label that indicates the cluster type.
    */
    'type'?: ClusterViewTypeEnum;
    /**
    * List that contains the versions of MongoDB that each node in the cluster runs.
    */
    'versions'?: Set<string>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "alertCount",
            "baseName": "alertCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "authEnabled",
            "baseName": "authEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "availability",
            "baseName": "availability",
            "type": "ClusterViewAvailabilityEnum",
            "format": ""
        },
        {
            "name": "backupEnabled",
            "baseName": "backupEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "clusterId",
            "baseName": "clusterId",
            "type": "string",
            "format": ""
        },
        {
            "name": "dataSizeBytes",
            "baseName": "dataSizeBytes",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "nodeCount",
            "baseName": "nodeCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "sslEnabled",
            "baseName": "sslEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ClusterViewTypeEnum",
            "format": ""
        },
        {
            "name": "versions",
            "baseName": "versions",
            "type": "Set<string>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ClusterView.attributeTypeMap;
    }

    public constructor() {
    }
}


export type ClusterViewAvailabilityEnum = "available" | "dead" | "unavailable" | "warning" ;
export type ClusterViewTypeEnum = "REPLICA_SET" | "SHARDED_CLUSTER" ;

