/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Details of a tenant-level query limit for Data Federation. Query limit is the limit on the amount of usage during a time period based on cost.
*/
export class DataFederationTenantQueryLimit {
    /**
    * Amount that indicates the current usage of the limit.
    */

    'currentUsage'?: number;
    /**
    * Default value of the limit.
    */

    'defaultLimit'?: number;
    /**
    * Only used for Data Federation limits. Timestamp that indicates when this usage limit was last modified. This field uses the ISO 8601 timestamp format in UTC.
    */

    'lastModifiedDate'?: Date;
    /**
    * Maximum value of the limit.
    */

    'maximumLimit'?: number;
    /**
    * Human-readable label that identifies the user-managed limit to modify.
    */

    'name': string;
    /**
    * Only used for Data Federation limits. Action to take when the usage limit is exceeded. If limit span is set to QUERY, this is ignored because MongoDB Cloud stops the query when it exceeds the usage limit.
    */

    'overrunPolicy'?: string;
    /**
    * Human-readable label that identifies the Federated Database Instance. If specified, the usage limit is for the specified federated database instance only. If omitted, the usage limit is for all federated database instances in the project.
    */

    'tenantName'?: string;
    /**
    * Amount to set the limit to.
    */

    'value': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "currentUsage",
            "baseName": "currentUsage",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "defaultLimit",
            "baseName": "defaultLimit",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "lastModifiedDate",
            "baseName": "lastModifiedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "maximumLimit",
            "baseName": "maximumLimit",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "overrunPolicy",
            "baseName": "overrunPolicy",
            "type": "string",
            "format": ""
        },
        {
            "name": "tenantName",
            "baseName": "tenantName",
            "type": "string",
            "format": ""
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "number",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return DataFederationTenantQueryLimit.attributeTypeMap;
    }

    public constructor() {
    }
}

