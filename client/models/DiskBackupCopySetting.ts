/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Copy setting item in the desired backup policy.
*/
export class DiskBackupCopySetting {
    /**
    * Human-readable label that identifies the cloud provider that stores the snapshot copy.
    */
    'cloudProvider'?: DiskBackupCopySettingCloudProviderEnum;
    /**
    * List that describes which types of snapshots to copy.
    */
    'frequencies'?: Array<DiskBackupCopySettingFrequenciesEnum>;
    /**
    * Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under [Cloud Providers](https://www.mongodb.com/docs/atlas/reference/cloud-providers/) 'regions' link.
    */
    'regionName'?: string;
    /**
    * Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, do a GET request to Return One Cluster in One Project and consult the replicationSpecs array [Return One Cluster in One Project](#operation/getLegacyCluster).
    */
    'replicationSpecId'?: string;
    /**
    * Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
    */
    'shouldCopyOplogs'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "cloudProvider",
            "baseName": "cloudProvider",
            "type": "DiskBackupCopySettingCloudProviderEnum",
            "format": ""
        },
        {
            "name": "frequencies",
            "baseName": "frequencies",
            "type": "Array<DiskBackupCopySettingFrequenciesEnum>",
            "format": ""
        },
        {
            "name": "regionName",
            "baseName": "regionName",
            "type": "string",
            "format": ""
        },
        {
            "name": "replicationSpecId",
            "baseName": "replicationSpecId",
            "type": "string",
            "format": ""
        },
        {
            "name": "shouldCopyOplogs",
            "baseName": "shouldCopyOplogs",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DiskBackupCopySetting.attributeTypeMap;
    }

    public constructor() {
    }
}


export type DiskBackupCopySettingCloudProviderEnum = "AWS" | "AZURE" | "GCP" ;
export type DiskBackupCopySettingFrequenciesEnum = "HOURLY" | "DAILY" | "WEEKLY" | "MONTHLY" | "ON_DEMAND" ;

