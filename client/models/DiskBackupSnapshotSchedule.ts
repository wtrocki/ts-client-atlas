/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiDeleteCopiedBackupsView } from '../models/ApiDeleteCopiedBackupsView';
import { ApiPolicyView } from '../models/ApiPolicyView';
import { AutoExportPolicyView } from '../models/AutoExportPolicyView';
import { DiskBackupCopySetting } from '../models/DiskBackupCopySetting';
import { Link } from '../models/Link';
import { HttpFile } from '../http/http';

export class DiskBackupSnapshotSchedule {
    /**
    * Flag that indicates whether MongoDB Cloud automatically exports cloud backup snapshots to the AWS bucket.
    */
    'autoExportEnabled'?: boolean;
    /**
    * Unique 24-hexadecimal digit string that identifies the cluster with the snapshot you want to return.
    */
    'clusterId'?: string;
    /**
    * Human-readable label that identifies the cluster with the snapshot you want to return.
    */
    'clusterName'?: string;
    /**
    * List that contains a document for each copy setting item in the desired backup policy.
    */
    'copySettings'?: Array<DiskBackupCopySetting>;
    /**
    * List that contains a document for each deleted copy setting whose backup copies you want to delete.
    */
    'deleteCopiedBackups'?: Array<ApiDeleteCopiedBackupsView>;
    '_export'?: AutoExportPolicyView;
    /**
    * List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.
    */
    'links'?: Array<Link>;
    /**
    * Date and time when MongoDB Cloud takes the next snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */
    'nextSnapshot'?: Date;
    /**
    * Rules set for this backup schedule.
    */
    'policies'?: Array<ApiPolicyView>;
    /**
    * Hour of day in Coordinated Universal Time (UTC) that represents when MongoDB Cloud takes the snapshot.
    */
    'referenceHourOfDay'?: number;
    /**
    * Minute of the **referenceHourOfDay** that represents when MongoDB Cloud takes the snapshot.
    */
    'referenceMinuteOfHour'?: number;
    /**
    * Number of previous days that you can restore back to with Continuous Cloud Backup accuracy. You must specify a positive, non-zero integer. This parameter applies to continuous cloud backups only.
    */
    'restoreWindowDays'?: number;
    /**
    * Flag that indicates whether to apply the retention changes in the updated backup policy to snapshots that MongoDB Cloud took previously.
    */
    'updateSnapshots'?: boolean;
    /**
    * Flag that indicates whether to use organization and project names instead of organization and project UUIDs in the path to the metadata files that MongoDB Cloud uploads to your AWS bucket.
    */
    'useOrgAndGroupNamesInExportPrefix'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "autoExportEnabled",
            "baseName": "autoExportEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "clusterId",
            "baseName": "clusterId",
            "type": "string",
            "format": ""
        },
        {
            "name": "clusterName",
            "baseName": "clusterName",
            "type": "string",
            "format": ""
        },
        {
            "name": "copySettings",
            "baseName": "copySettings",
            "type": "Array<DiskBackupCopySetting>",
            "format": ""
        },
        {
            "name": "deleteCopiedBackups",
            "baseName": "deleteCopiedBackups",
            "type": "Array<ApiDeleteCopiedBackupsView>",
            "format": ""
        },
        {
            "name": "_export",
            "baseName": "export",
            "type": "AutoExportPolicyView",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<Link>",
            "format": ""
        },
        {
            "name": "nextSnapshot",
            "baseName": "nextSnapshot",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "policies",
            "baseName": "policies",
            "type": "Array<ApiPolicyView>",
            "format": ""
        },
        {
            "name": "referenceHourOfDay",
            "baseName": "referenceHourOfDay",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "referenceMinuteOfHour",
            "baseName": "referenceMinuteOfHour",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "restoreWindowDays",
            "baseName": "restoreWindowDays",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "updateSnapshots",
            "baseName": "updateSnapshots",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "useOrgAndGroupNamesInExportPrefix",
            "baseName": "useOrgAndGroupNamesInExportPrefix",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DiskBackupSnapshotSchedule.attributeTypeMap;
    }

    public constructor() {
    }
}

