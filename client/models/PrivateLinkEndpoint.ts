/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GCPConsumerForwardingRule } from '../models/GCPConsumerForwardingRule';
import { HttpFile } from '../http/http';

export class PrivateLinkEndpoint {
    /**
    * Cloud service provider that serves the requested endpoint.
    */

    'cloudProvider': string;
    /**
    * Flag that indicates whether MongoDB Cloud received a request to remove the specified private endpoint from the private endpoint service.
    */

    'deleteRequested'?: boolean;
    /**
    * Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.
    */

    'errorMessage'?: string;
    /**
    * State of the Amazon Web Service PrivateLink connection when MongoDB Cloud received this request.
    */

    'connectionStatus'?: string;
    /**
    * Unique 24-hexadecimal digit string that identifies the interface endpoint.
    */

    'interfaceEndpointId'?: string;
    /**
    * Human-readable label that MongoDB Cloud generates that identifies the private endpoint connection.
    */

    'privateEndpointConnectionName'?: string;
    /**
    * IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.
    */

    'privateEndpointIPAddress'?: string;
    /**
    * Unique string that identifies the Azure private endpoint's network interface that someone added to this private endpoint service.
    */

    'privateEndpointResourceId'?: string;
    /**
    * State of the Azure Private Link Service connection when MongoDB Cloud received this request.  Alternatively: State of the Google Cloud network endpoint group when MongoDB Cloud received this request.
    */

    'status'?: string;
    /**
    * Human-readable label that identifies a set of endpoints.
    */

    'endpointGroupName'?: string;
    /**
    * List of individual private endpoints that comprise this endpoint group.
    */

    'endpoints'?: Array<GCPConsumerForwardingRule>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "cloudProvider",
            "baseName": "cloudProvider",
            "type": "string",
            "format": ""
        },
        {
            "name": "deleteRequested",
            "baseName": "deleteRequested",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "errorMessage",
            "baseName": "errorMessage",
            "type": "string",
            "format": ""
        },
        {
            "name": "connectionStatus",
            "baseName": "connectionStatus",
            "type": "string",
            "format": ""
        },
        {
            "name": "interfaceEndpointId",
            "baseName": "interfaceEndpointId",
            "type": "string",
            "format": ""
        },
        {
            "name": "privateEndpointConnectionName",
            "baseName": "privateEndpointConnectionName",
            "type": "string",
            "format": ""
        },
        {
            "name": "privateEndpointIPAddress",
            "baseName": "privateEndpointIPAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "privateEndpointResourceId",
            "baseName": "privateEndpointResourceId",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "endpointGroupName",
            "baseName": "endpointGroupName",
            "type": "string",
            "format": ""
        },
        {
            "name": "endpoints",
            "baseName": "endpoints",
            "type": "Array<GCPConsumerForwardingRule>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PrivateLinkEndpoint.attributeTypeMap;
    }

    public constructor() {
    }
}

