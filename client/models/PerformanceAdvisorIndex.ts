/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class PerformanceAdvisorIndex {
    /**
    * The average size of an object in the collection of this index.
    */

    'avgObjSize'?: number;
    /**
    * Unique 24-hexadecimal digit string that identifies this index.
    */

    'id'?: string;
    /**
    * List that contains unique 24-hexadecimal character string that identifies the query shapes in this response that the Performance Advisor suggests.
    */

    'impact'?: Array<string>;
    /**
    * List that contains documents that specify a key in the index and its sort order.
    */

    'index'?: Array<{ [key: string]: number; }>;
    /**
    * Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.
    */

    'namespace'?: string;
    /**
    * Estimated performance improvement that the suggested index provides. This value corresponds to **Impact** in the Performance Advisor user interface.
    */

    'weight'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "avgObjSize",
            "baseName": "avgObjSize",
            "type": "number",
            "format": "double"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "impact",
            "baseName": "impact",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "index",
            "baseName": "index",
            "type": "Array<{ [key: string]: number; }>",
            "format": "int32"
        },
        {
            "name": "namespace",
            "baseName": "namespace",
            "type": "string",
            "format": ""
        },
        {
            "name": "weight",
            "baseName": "weight",
            "type": "number",
            "format": "double"
        }    ];

    static getAttributeTypeMap() {
        return PerformanceAdvisorIndex.attributeTypeMap;
    }

    public constructor() {
    }
}

