/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiCheckpointPart } from '../models/ApiCheckpointPart';
import { Link } from '../models/Link';
import { HttpFile } from '../http/http';

export class ApiAtlasCheckpoint {
    /**
    * Unique 24-hexadecimal digit string that identifies the cluster that contains the checkpoint.
    */

    'clusterId'?: string;
    /**
    * Date and time when the checkpoint completed and the balancer restarted. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'completed'?: Date;
    /**
    * Unique 24-hexadecimal digit string that identifies the project that owns the checkpoints.
    */

    'groupId'?: string;
    /**
    * Unique 24-hexadecimal digit string that identifies checkpoint.
    */

    'id'?: string;
    /**
    * List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.
    */

    'links'?: Array<Link>;
    /**
    * Metadata that describes the complete snapshot.  - For a replica set, this array contains a single document. - For a sharded cluster, this array contains one document for each shard plus one document for the config host.
    */

    'parts'?: Array<ApiCheckpointPart>;
    /**
    * Flag that indicates whether MongoDB Cloud can use the checkpoint for a restore.
    */

    'restorable'?: boolean;
    /**
    * Date and time when the balancer stopped and began the checkpoint. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'started'?: Date;
    /**
    * Date and time to which the checkpoint restores. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
    */

    'timestamp'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "clusterId",
            "baseName": "clusterId",
            "type": "string",
            "format": ""
        },
        {
            "name": "completed",
            "baseName": "completed",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<Link>",
            "format": ""
        },
        {
            "name": "parts",
            "baseName": "parts",
            "type": "Array<ApiCheckpointPart>",
            "format": ""
        },
        {
            "name": "restorable",
            "baseName": "restorable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "started",
            "baseName": "started",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return ApiAtlasCheckpoint.attributeTypeMap;
    }

    public constructor() {
    }
}

