/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DataLakeDatabaseDataSource } from '../models/DataLakeDatabaseDataSource';
import { HttpFile } from '../http/http';

/**
* A collection and data sources that map to a ``stores`` data store.
*/
export class DataLakeDatabaseCollection {
    /**
    * Array that contains the data stores that map to a collection for this data lake.
    */

    'dataSources'?: Array<DataLakeDatabaseDataSource>;
    /**
    * Human-readable label that identifies the collection to which MongoDB Cloud maps the data in the data stores.
    */

    'name'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "dataSources",
            "baseName": "dataSources",
            "type": "Array<DataLakeDatabaseDataSource>",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DataLakeDatabaseCollection.attributeTypeMap;
    }

    public constructor() {
    }
}

