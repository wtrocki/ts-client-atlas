/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.  The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:  ``` curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\   --digest \\   --header \"Accept: application/vnd.atlas.2023-02-01+json\" \\   GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true\" ```  To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AlertsNotificationRootForGroup } from '../models/AlertsNotificationRootForGroup';
import { GreaterThanRawThreshold } from '../models/GreaterThanRawThreshold';
import { Link } from '../models/Link';
import { ServerlessMetricThreshold } from '../models/ServerlessMetricThreshold';
import { HttpFile } from '../http/http';

export class GroupAlertsConfig {
    /**
    * Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.
    */

    'created'?: Date;
    /**
    * Flag that indicates whether someone enabled this alert configuration for the specified project.
    */

    'enabled'?: boolean;
    /**
    * Event type that triggers an alert.
    */

    'eventTypeName'?: string;
    /**
    * Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.
    */

    'groupId'?: string;
    /**
    * Unique 24-hexadecimal digit string that identifies this alert configuration.
    */

    'id'?: string;
    /**
    * List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.
    */

    'links'?: Array<Link>;
    /**
    * No matchers are available for these alert types. The list is always empty.  Alternatively: List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.  Alternatively: List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.  Alternatively: No matchers are available for these alert types. The list is always empty.  Alternatively: List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.  Alternatively: No matchers are available for these alert types. The list is always empty.  Alternatively: No matchers are available for these alert types. The list is always empty.  Alternatively: List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.  Alternatively: List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.  Alternatively: No matchers are available for these alert types. The list is always empty.  Alternatively: List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.  Alternatively: List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.  Alternatively: No matchers are available for these alert types. The list is always empty.
    */

    'matchers'?: Array<any>;
    /**
    * List that contains the targets that MongoDB Cloud sends notifications.
    */

    'notifications'?: Array<AlertsNotificationRootForGroup>;
    /**
    * Date and time when someone last updated this alert configuration. This parameter expresses its value in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener noreferrer\">ISO 8601</a> timestamp format in UTC.
    */

    'updated'?: Date;

    'metricThreshold'?: ServerlessMetricThreshold;

    'threshold'?: GreaterThanRawThreshold;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "created",
            "baseName": "created",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "eventTypeName",
            "baseName": "eventTypeName",
            "type": "string",
            "format": ""
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<Link>",
            "format": ""
        },
        {
            "name": "matchers",
            "baseName": "matchers",
            "type": "Array<any>",
            "format": ""
        },
        {
            "name": "notifications",
            "baseName": "notifications",
            "type": "Array<AlertsNotificationRootForGroup>",
            "format": ""
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "metricThreshold",
            "baseName": "metricThreshold",
            "type": "ServerlessMetricThreshold",
            "format": ""
        },
        {
            "name": "threshold",
            "baseName": "threshold",
            "type": "GreaterThanRawThreshold",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GroupAlertsConfig.attributeTypeMap;
    }

    public constructor() {
    }
}

