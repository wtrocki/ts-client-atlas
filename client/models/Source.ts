/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Document that describes the source of the migration.
*/
export class Source {
    /**
    * Path to the CA certificate that signed SSL certificates use to authenticate to the source cluster.
    */
    'caCertificatePath'?: string;
    /**
    * Label that identifies the source cluster name.
    */
    'clusterName': string;
    /**
    * Unique 24-hexadecimal digit string that identifies the source project.
    */
    'groupId': string;
    /**
    * Flag that indicates whether MongoDB Automation manages authentication to the source cluster. If true, do not provide values for username and password.
    */
    'managedAuthentication': boolean;
    /**
    * Password that authenticates the username to the source cluster.
    */
    'password'?: string;
    /**
    * Flag that indicates whether you have SSL enabled.
    */
    'ssl': boolean;
    /**
    * Label that identifies the SCRAM-SHA user that connects to the source cluster.
    */
    'username'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "caCertificatePath",
            "baseName": "caCertificatePath",
            "type": "string",
            "format": ""
        },
        {
            "name": "clusterName",
            "baseName": "clusterName",
            "type": "string",
            "format": ""
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "managedAuthentication",
            "baseName": "managedAuthentication",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string",
            "format": ""
        },
        {
            "name": "ssl",
            "baseName": "ssl",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Source.attributeTypeMap;
    }

    public constructor() {
    }
}

