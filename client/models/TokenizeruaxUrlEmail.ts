/**
 * MongoDB Atlas Administration API
 * The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Tokenizer that creates tokens from URLs and email addresses. Although this tokenizer uses word break rules from the Unicode Text Segmentation algorithm, we recommend using it only when the indexed field value includes URLs and email addresses. For fields that don't include URLs or email addresses, use the **standard** tokenizer to create tokens based on word break rules.
*/
export class TokenizeruaxUrlEmail {
    /**
    * Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens.
    */
    'maxTokenLength'?: number;
    /**
    * Human-readable label that identifies this tokenizer type.
    */
    'type': TokenizeruaxUrlEmailTypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "maxTokenLength",
            "baseName": "maxTokenLength",
            "type": "number",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "TokenizeruaxUrlEmailTypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TokenizeruaxUrlEmail.attributeTypeMap;
    }

    public constructor() {
    }
}


export type TokenizeruaxUrlEmailTypeEnum = "uaxUrlEmail" ;

